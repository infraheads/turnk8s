name: Destroy Kubernetes Cluster and Terraform Cloud Workspace

on:
  workflow_dispatch:
    inputs:
      cluster_name:
        description: 'Kubernetes Cluster Name'
        required: true

env:
  TF_CLOUD_ORGANIZATION: "infraheads"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"

jobs:
  destroy-resources:
    runs-on: self-hosted
    permissions:
      contents: read
      pull-requests: write
    defaults:
      run:
        working-directory: "terraform"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v2.0.3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          
          
      - name: Init
        run: |
          # Initialize Terraform
          terraform init
        env:
          TF_WORKSPACE: "default-ws"
          
      - name: Select workspace
        run: |
          set +e

          # Check if Terraform workspace exists
          terraform workspace select ${{ inputs.cluster_name }}
          tf_exitcode=$?
          
          set -e

          if [ $tf_exitcode -ne 0 ]; 
          then
              echo """
              Error: Cluster or Workspace does not exist.
              Message: There is no Kubernetes cluster or Terraform workspace with the name '${{ inputs.cluster_name }}'.
              """
              exit 1
          fi

      - name: Destroy 
        run: |
          # Destroy Kubernetes Cluster
          terraform destroy -auto-approve \
          -var="cluster_name=${{ inputs.cluster_name }}"

      - name: Destroy Terraform Cloud Workspace
        run: |
          # Terraform Cloud API to destroy workspace
          terraform workspace delete ${{ inputs.cluster_name }}