name: 'Automated Cluster Deployment for Pull Requests'

on:
  pull_request:
    branches:
      - '*'
    paths:
      - 'config.yaml'

env:
  TF_CLOUD_ORGANIZATION: "infraheads"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_VAR_proxmox_token_id: "${{ secrets.PROXMOX_TOKEN_ID }}"
  TF_VAR_proxmox_token_secret: "${{ secrets.PROXMOX_TOKEN_SECRET }}"
  TF_VAR_github_token: "${{ secrets.TOKEN_GITHUB }}"
  TF_VAR_netris_controller_host: "${{ vars.NETRIS_CONTROLLER_HOST }}"
  TF_VAR_netris_controller_login: "${{ secrets.NETRIS_CONTROLLER_LOGIN }}"
  TF_VAR_netris_controller_password: "${{ secrets.NETRIS_CONTROLLER_PASSWORD }}"
  TF_VAR_argocd_admin_password: "${{ secrets.ARGOCD_ADMIN_PASSWORD }}"
  TF_VAR_cluster_name: "turnk8s-${{ github.event.number }}"

jobs:
  checking_yaml_correctness:
    runs-on: self-hosted
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - name: Ensure validity of the config.yaml file
        run: |
          if [ -s ${GITHUB_WORKSPACE}/config.yaml ];
          then
            clusters=$(yq e 'keys | .[]' ${GITHUB_WORKSPACE}/config.yaml | jq -R -s -c 'split("\n")[:-1]')
            if ! { [[ ${{ github.event.pull_request.draft }} == true ]] && [ $(echo "$clusters" | jq -r '. | length') == 1 ] && [ $(echo "$clusters" | jq -r '.[0]') == "${{ env.TF_VAR_cluster_name }}" ]; };
            then
              echo """
               For draft PRs, the cluster name must be in the format "turnk8s-<PR_NUMBER>",
               as it is assumed to be a test cluster for modifying logic and testing validations and features.
               """
              exit 1
            elif ! { [[ ${{ github.event.pull_request.draft }} == false ]] && [ $(echo "$clusters" | jq -r '. | map(startswith("turnk8s-")) | any') == false ]; };
            then
              echo """
               For non-draft PRs, the cluster name must not be started with "turnk8s-" prefix,
               as these clusters are not for testing and should follow a different naming convention.
              """
              exit 1
            fi
          fi

  apply_cluster:
    needs: checking_yaml_correctness
    if: ${{ github.event.pull_request.draft == true }}
    runs-on: self-hosted
    permissions:
      contents: read
      pull-requests: write
    defaults:
      run:
        working-directory: "terraform"
    steps:
      - uses: actions/checkout@v4

      # Setup Node.js on self-hosted runner for Terraform actions
      - uses: actions/setup-node@v4
        with:
          node-version: 20.14.0

      # Using composite actions for applying cluster's infrastructure changes
      - name: Infrastructure updates
        uses: ./.github/actions/apply_terraform_composite_action
        with:
          workspace: ${{ env.TF_VAR_cluster_name }}-infrastructure
          plan_output: tfplan-${{ env.TF_VAR_cluster_name }}-infrastructure
          working_directory: "terraform/infrastructure"
          tf_api_token: ${{ secrets.TF_API_TOKEN }}

      # Using composite actions for applying cluster's applications and tools changes
      - name: Cluster updates
        uses: ./.github/actions/apply_terraform_composite_action
        with:
          workspace: ${{ env.TF_VAR_cluster_name }}-cluster
          plan_output: tfplan-${{ env.TF_VAR_cluster_name }}-cluster
          working_directory: "terraform/cluster"
          tf_api_token: ${{ secrets.TF_API_TOKEN }}

      - name: Generating kube-config
        uses: actions/upload-artifact@v4
        with:
          name: kube-config-${{ env.TF_VAR_cluster_name }}
          path: /opt/kubeconfig/${{ env.TF_VAR_cluster_name }}
          compression-level: 0

      - name: Generating Markdown
        run: |
          echo "### turnk8s" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Push your Kubernetes service manifests to [GitHub URL](https://github.com/infraheads/${{ env.TF_VAR_cluster_name }}) to get them deployed on the cluster. :star_struck:" >> $GITHUB_STEP_SUMMARY
          echo "Use the 'kubeconfig' file to connect to the cluster, which is attached in 'Artifacts' section." >> $GITHUB_STEP_SUMMARY

      - name: Remove kube-config
        run: rm /opt/kubeconfig/${{ env.TF_VAR_cluster_name }}
