name: 'Terraform Workflow'

on:
  workflow_dispatch:
    inputs:
      cluster_name:
        description: 'A unique Cluster name'
        required: true
        type: string
      controlplane_cpu_cores:
        description: 'CPU cores count of the ControlPlane'
        required: true
        type: number
        default: 2
      controlplane_memory:
        description: 'RAM memory of the ControlPlane'
        required: true
        type: number
        default: 4096
      controlplane_disk_size:
        description: 'Disk size of the ControlPlane'
        required: true
        type: number
        default: 32
      worker_nodes_count:
        description: 'Count of the Worker Nodes'
        required: true
        type: number
        default: 1
      worker_cpu_cores:
        description: 'CPU cores count of the Worker Node'
        required: true
        type: number
        default: 2
      worker_memory:
        description: 'RAM memory of the Worker Node'
        required: true
        type: number
        default: 4096
      worker_disk_size:
        description: 'Disk size of the Worker Node'
        required: true
        type: number
        default: 32

env:
  TF_CLOUD_ORGANIZATION: "infraheads"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"

jobs:
  terraform:
    runs-on: self-hosted
    permissions:
      contents: read
      pull-requests: write
    defaults:
      run:
        working-directory: "terraform"
    env:
      TF_VAR_proxmox_ip: "${{ secrets.PROXMOX_IP }}"
      TF_VAR_proxmox_token_id: "${{ secrets.PROXMOX_TOKEN_ID }}"
      TF_VAR_proxmox_token_secret: "${{ secrets.PROXMOX_TOKEN_SECRET }}"
      TF_VAR_cluster_name: "${{ inputs.cluster_name }}"
      TF_VAR_controlplane_cores: "${{ inputs.controlplane_cpu_cores }}"
      TF_VAR_controlplane_memory: "${{ inputs.controlplane_memory }}"
      TF_VAR_controlplane_disk_size: "${{ inputs.controlplane_disk_size }}"
      TF_VAR_worker_nodes_count: "${{ inputs.worker_nodes_count }}"
      TF_VAR_worker_cores: "${{ inputs.worker_cpu_cores }}"
      TF_VAR_worker_memory: "${{ inputs.worker_memory }}"
      TF_VAR_worker_disk_size: "${{ inputs.worker_disk_size }}"
    steps:
    - uses: actions/checkout@v4

    - uses: hashicorp/setup-terraform@v2.0.3
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Init
      id: init
      run: terraform init
      env:
        TF_WORKSPACE: "default-ws"

    - name: Select workspace
      id: workspace
      run: terraform workspace new ${{ inputs.cluster_name }}

    - name: Validate
      id: validate
      run: terraform validate -no-color

    - name: Plan
      id: plan
      run: terraform plan -out=tfplan

    - name: Apply
      id: apply
      run: terraform apply tfplan

    - name: Upload test file as artifact
      uses: actions/upload-artifact@v3
      with:
        name: my-artifact
        path: /tmp/test

    - name: Download a single artifact
      uses: actions/download-artifact@v3
      with:
        name: my-artifact