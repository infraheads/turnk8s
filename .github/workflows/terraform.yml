name: 'Terraform Workflow'

on:
  workflow_dispatch:
    inputs:
      cluster_name:
        description: 'A unique Cluster name'
        required: true
        type: string

env:
  TF_CLOUD_ORGANIZATION: "infraheads"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"

jobs:
  terraform:
    runs-on: self-hosted
    permissions:
      contents: read
      pull-requests: write
    defaults:
      run:
        working-directory: "terraform"
    env:
      TF_VAR_proxmox_ip: "${{ secrets.PROXMOX_IP }}"
      TF_VAR_proxmox_token_id: "${{ secrets.PROXMOX_TOKEN_ID }}"
      TF_VAR_proxmox_token_secret: "${{ secrets.PROXMOX_TOKEN_SECRET }}"
      TF_VAR_cluster_name: "${{ inputs.cluster_name }}"
    steps:
    - uses: actions/checkout@v4

    - uses: hashicorp/setup-terraform@v2.0.3
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Init
      id: init
      run: terraform init

    - name: Select workspace
      id: workspace
      run: terraform workspace select --or-create ${{ inputs.cluster_name }}

    - name: Validate
      id: validate
      run: terraform validate -no-color

    - name: Plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: true

    - uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
          <details><summary>Validation Output</summary>
    
          \`\`\`\n
          ${{ steps.validate.outputs.stdout }}
          \`\`\`
    
          </details>
    
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
    
          <details><summary>Show Plan</summary>
    
          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`
    
          </details>
    
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
    
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
